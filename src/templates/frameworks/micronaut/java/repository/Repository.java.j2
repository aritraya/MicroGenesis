package {{ base_package }}.repository;

import {{ base_package }}.entity.SampleEntity;
import io.micronaut.data.annotation.Repository;
import io.micronaut.data.repository.CrudRepository;
import java.util.UUID;
import java.util.List;
import java.util.Optional;

/**
 * Repository for the SampleEntity.
 * <p>
 * Generated by MicroGenesis scaffolding tool.
 * </p>
 */
@Repository
public interface SampleEntityRepository extends CrudRepository<SampleEntity, UUID> {
    
    /**
     * Find all entities by name.
     * 
     * @param name name to search for
     * @return list of matching entities
     */
    List<SampleEntity> findByName(String name);
    
    /**
     * Find entity by name (exact match).
     * 
     * @param name name to search for
     * @return optional containing the entity if found
     */
    Optional<SampleEntity> findFirstByName(String name);
    
    /**
     * Find entities with name containing the given string (case-insensitive).
     * 
     * @param namePart part of name to search for
     * @return list of matching entities
     */
    List<SampleEntity> findByNameContainsIgnoreCase(String namePart);
    
    /**
     * Find all entities.
     * 
     * @return list of all entities
     */
    List<SampleEntity> findAll();
}
