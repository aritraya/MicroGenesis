package {{ base_package }}.repository

import {{ base_package }}.entity.SampleEntity
import io.micronaut.data.annotation.Repository
import io.micronaut.data.repository.CrudRepository
import java.util.UUID
import java.util.Optional

/**
 * Repository for the SampleEntity.
 *
 * Generated by MicroGenesis scaffolding tool.
 */
@Repository
interface SampleEntityRepository : CrudRepository<SampleEntity, UUID> {
    
    /**
     * Find all entities by name.
     * 
     * @param name name to search for
     * @return list of matching entities
     */
    fun findByName(name: String): List<SampleEntity>
    
    /**
     * Find entity by name (exact match).
     * 
     * @param name name to search for
     * @return optional containing the entity if found
     */
    fun findFirstByName(name: String): Optional<SampleEntity>
    
    /**
     * Find entities with name containing the given string (case-insensitive).
     * 
     * @param namePart part of name to search for
     * @return list of matching entities
     */
    fun findByNameContainsIgnoreCase(namePart: String): List<SampleEntity>
    
    /**
     * Find all entities.
     * 
     * @return list of all entities
     */
    fun findAll(): List<SampleEntity>
}
