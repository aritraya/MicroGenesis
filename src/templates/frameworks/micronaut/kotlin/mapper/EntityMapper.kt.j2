package {{ base_package }}.mapper

import {{ base_package }}.dto.SampleEntityDto
import {{ base_package }}.entity.SampleEntity
import jakarta.inject.Singleton

/**
 * Mapper for converting between SampleEntity and SampleEntityDto.
 *
 * Generated by MicroGenesis scaffolding tool.
 */
@Singleton
class SampleEntityMapper {
    
    /**
     * Convert entity to DTO.
     *
     * @param entity the entity to convert
     * @return the DTO
     */
    fun toDto(entity: SampleEntity): SampleEntityDto {
        return SampleEntityDto(
            id = entity.id,
            name = entity.name,
            description = entity.description,
            createdAt = entity.createdAt,
            updatedAt = entity.updatedAt
        )
    }
    
    /**
     * Convert DTO to entity.
     *
     * @param dto the DTO to convert
     * @return the entity
     */
    fun toEntity(dto: SampleEntityDto): SampleEntity {
        return SampleEntity(
            id = dto.id,
            name = dto.name,
            description = dto.description,
            createdAt = dto.createdAt,
            updatedAt = dto.updatedAt
        )
    }
    
    /**
     * Update entity from DTO.
     *
     * @param entity the entity to update
     * @param dto the DTO with updated values
     * @return the updated entity
     */
    fun updateEntityFromDto(entity: SampleEntity, dto: SampleEntityDto): SampleEntity {
        entity.name = dto.name
        entity.description = dto.description
        
        return entity
    }
}
