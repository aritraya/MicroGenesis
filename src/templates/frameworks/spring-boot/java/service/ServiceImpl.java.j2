package {{ base_package }}.service.impl;

import {{ base_package }}.model.*;
import {{ base_package }}.dto.*;
import {{ base_package }}.repository.*;
import {{ base_package }}.service.{{ service_name }};
import {{ base_package }}.mapper.*;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import java.util.List;
import java.util.Optional;
import java.util.stream.Collectors;

/**
 * Implementation of the {{ service_name }} interface.
 * <p>
 * Generated by MicroGenesis scaffolding tool.
 * </p>
 */
@Service
@Transactional
public class {{ impl_name }} implements {{ service_name }} {

    {% for endpoint in endpoints %}
    /**
     * Implementation for {{ endpoint.operationId | default('operation') }}
     */
    @Override
    public {{ endpoint.response.type | default('void') }} {{ endpoint.operationId | default('operation') }}({% for param in endpoint.parameters | default([]) %}{{ param.type }} {{ param.name }}{% if not loop.last %}, {% endif %}{% endfor %}) {
        // TODO: Implement {{ endpoint.operationId | default('operation') }} method
        {% if endpoint.response and endpoint.response.type != 'void' %}
        return null;
        {% endif %}
    }
    
    {% endfor %}
}
