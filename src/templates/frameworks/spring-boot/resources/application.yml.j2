# Server configuration
server:
  port: 8080

# Spring Boot configuration
spring:
  application:
    name: {{ project_name }}
  
  {% if database.name %}
  # Database configuration
  datasource:
    {% if database.name == "postgresql" or database.name == "postgres" %}
    url: jdbc:postgresql://{{ database.host | default('localhost') }}:{{ database.port | default('5432') }}/{{ database.name | default(project_name) }}
    username: {{ database.username | default('postgres') }}
    password: {{ database.password | default('postgres') }}
    driver-class-name: org.postgresql.Driver
    {% elif database.name == "mysql" %}
    url: jdbc:mysql://{{ database.host | default('localhost') }}:{{ database.port | default('3306') }}/{{ database.name | default(project_name) }}
    username: {{ database.username | default('root') }}
    password: {{ database.password | default('root') }}
    driver-class-name: com.mysql.cj.jdbc.Driver
    {% elif database.name == "h2" %}
    url: jdbc:h2:mem:{{ project_name }}
    username: sa
    password: password
    driver-class-name: org.h2.Driver
    {% endif %}
  
  {% if database.name != "mongodb" %}
  # JPA configuration
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        {% if database.name == "postgresql" or database.name == "postgres" %}
        dialect: org.hibernate.dialect.PostgreSQLDialect
        {% elif database.name == "mysql" %}
        dialect: org.hibernate.dialect.MySQL8Dialect
        {% elif database.name == "h2" %}
        dialect: org.hibernate.dialect.H2Dialect
        {% endif %}
  {% endif %}
  
  {% if database.name == "mongodb" %}
  # MongoDB configuration
  data:
    mongodb:
      host: {{ database.host | default('localhost') }}
      port: {{ database.port | default('27017') }}
      database: {{ database.name | default(project_name) }}
      {% if database.username and database.password %}
      username: {{ database.username }}
      password: {{ database.password }}
      authentication-database: admin
      {% endif %}
  {% endif %}
  {% endif %}

{% if features and 'logging' in features %}
# Logging configuration
logging:
  level:
    root: INFO
    {{ base_package }}: DEBUG
    org.hibernate.SQL: DEBUG
    {% if database.name != "mongodb" %}
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    {% endif %}
{% endif %}

{% if features and 'swagger' in features %}
# Swagger / OpenAPI configuration
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    operationsSorter: method
{% endif %}

# Application-specific configuration
{{ project_name | lower }}:
  app:
    name: {{ project_name }}
    description: {{ description | default('Generated by MicroGenesis') }}
    version: 1.0.0
