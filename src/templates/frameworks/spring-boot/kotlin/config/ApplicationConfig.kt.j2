package {{ base_package }}.config

import org.springframework.context.annotation.Bean
import org.springframework.context.annotation.Configuration
{% if database == 'mongodb' %}
import org.springframework.data.mongodb.config.EnableMongoAuditing
{% elif database == 'jpa' %}
import org.springframework.data.jpa.repository.config.EnableJpaAuditing
{% endif %}
{% if has_cors is defined and has_cors %}
import org.springframework.web.cors.CorsConfiguration
import org.springframework.web.cors.UrlBasedCorsConfigurationSource
import org.springframework.web.filter.CorsFilter
import java.util.Arrays
{% endif %}

/**
 * Application configuration class.
 *
 * Generated by MicroGenesis scaffolding tool.
 */
@Configuration
{% if database == 'mongodb' %}
@EnableMongoAuditing
{% elif database == 'jpa' %}
@EnableJpaAuditing
{% endif %}
class ApplicationConfig {

    {% if has_cors is defined and has_cors %}
    /**
     * Configures CORS for the application.
     * 
     * @return the CORS filter
     */
    @Bean
    fun corsFilter(): CorsFilter {
        val corsConfiguration = CorsConfiguration()
        corsConfiguration.allowCredentials = true
        corsConfiguration.allowedOrigins = listOf("http://localhost:8080", "http://localhost:3000")
        corsConfiguration.allowedHeaders = listOf(
            "Origin", "Access-Control-Allow-Origin", "Content-Type",
            "Accept", "Authorization", "Origin, Accept", "X-Requested-With",
            "Access-Control-Request-Method", "Access-Control-Request-Headers"
        )
        corsConfiguration.exposedHeaders = listOf(
            "Origin", "Content-Type", "Accept", "Authorization",
            "Access-Control-Allow-Origin", "Access-Control-Allow-Credentials"
        )
        corsConfiguration.allowedMethods = listOf("GET", "POST", "PUT", "DELETE", "OPTIONS")
        
        val urlBasedCorsConfigurationSource = UrlBasedCorsConfigurationSource()
        urlBasedCorsConfigurationSource.registerCorsConfiguration("/**", corsConfiguration)
        
        return CorsFilter(urlBasedCorsConfigurationSource)
    }
    {% endif %}
}
