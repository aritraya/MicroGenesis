# Azure Pipelines configuration for Maven
# Generated by MicroGenesis

trigger:
  branches:
    include:
      - main
      - develop
      - 'feature/*'
      - 'release/*'

pool:
  vmImage: 'ubuntu-latest'

# Variables
variables:
  jdkVersion: '{{ config.language.version | default("17") }}'
  mavenCacheFolder: $(Pipeline.Workspace)/.m2/repository
  mavenOptions: '-Dmaven.repo.local=$(mavenCacheFolder)'

stages:
- stage: Build
  displayName: Build and Test
  jobs:
  - job: BuildJob
    displayName: Build and Test
    steps:
    - task: Maven@3
      displayName: 'Cache Maven packages'
      inputs:
        mavenPomFile: 'pom.xml'
        mavenOptions: '$(mavenOptions)'
        goals: 'clean'
        jdkVersionOption: '1.$(jdkVersion)'
        javaHomeOption: 'JDKVersion'
        effectivePomSkip: false
        options: '-q -B'

    - task: Maven@3
      displayName: 'Build and Test'
      inputs:
        mavenPomFile: 'pom.xml'
        mavenOptions: '$(mavenOptions)'
        jdkVersionOption: '1.$(jdkVersion)'
        javaHomeOption: 'JDKVersion'
        goals: 'clean verify'
        options: '-B'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'

    - task: Maven@3
      displayName: 'Generate Code Coverage Report'
      inputs:
        mavenPomFile: 'pom.xml'
        mavenOptions: '$(mavenOptions)'
        jdkVersionOption: '1.$(jdkVersion)'
        javaHomeOption: 'JDKVersion'
        goals: 'verify'
        options: '-B org.jacoco:jacoco-maven-plugin:report'

    - task: PublishCodeCoverageResults@1
      displayName: 'Publish Code Coverage Report'
      inputs:
        codeCoverageTool: 'JaCoCo'
        summaryFileLocation: '$(System.DefaultWorkingDirectory)/target/site/jacoco/jacoco.xml'
        reportDirectory: '$(System.DefaultWorkingDirectory)/target/site/jacoco'

{% if 'docker' in config.features %}
    - task: Docker@2
      displayName: 'Build Docker Image'
      inputs:
        command: build
        Dockerfile: Dockerfile
        repository: '{{ config.project_name | lower }}'
        tags: |
          latest
          $(Build.BuildNumber)
{% endif %}

    - task: CopyFiles@2
      displayName: 'Copy JAR to staging directory'
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)/target'
        Contents: '*.jar'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish artifacts'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'jar-files'
        publishLocation: 'Container'

{% if 'sonarqube' in config.features %}
- stage: CodeAnalysis
  displayName: Code Analysis
  dependsOn: Build
  jobs:
  - job: SonarQube
    displayName: SonarQube Analysis
    steps:
    - task: Maven@3
      displayName: 'SonarQube Analysis'
      inputs:
        mavenPomFile: 'pom.xml'
        mavenOptions: '$(mavenOptions)'
        jdkVersionOption: '1.$(jdkVersion)'
        javaHomeOption: 'JDKVersion'
        goals: 'sonar:sonar'
        options: '-Dsonar.host.url=$(SONAR_HOST_URL) -Dsonar.login=$(SONAR_TOKEN)'
      env:
        SONAR_TOKEN: $(SONAR_TOKEN)
        SONAR_HOST_URL: $(SONAR_HOST_URL)
{% endif %}

{% if 'deploy' in config.features %}
- stage: Deploy
  displayName: Deploy
  dependsOn: Build
  jobs:
  - job: DeployJob
    displayName: Deploy Application
    steps:
    - download: current
      artifact: 'jar-files'
    
    - script: |
        echo "Deploying application..."
        # Add deployment steps here
      displayName: 'Deploy Application'
{% endif %}
