package {{ base_package }}.repository;

import {{ base_package }}.model.{{ model.name }};
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.stereotype.Repository;
{% if 'data' in features %}
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;
{% endif %}
import java.util.List;

/**
 * Repository for {{ model.name }}
 */
@Repository
public interface {{ repository_name }} extends JpaRepository<{{ model.name }}, Long> {

{% for property in model.properties %}
{% if property.name != "id" and property.type == "string" %}
    /**
     * Find {{ model.name|lower|replace("entity", "") }} by {{ property.name }}
     * 
     * @param {{ property.name }} the {{ property.name }} to search for
     * @return a list of matching {{ model.name|lower|replace("entity", "") }}
     */
    List<{{ model.name }}> findBy{{ property.name|capitalize }}(String {{ property.name }});

{% if 'data' in features %}
    /**
     * Find {{ model.name|lower|replace("entity", "") }} containing {{ property.name }}
     * 
     * @param {{ property.name }} the {{ property.name }} pattern to search for
     * @return a list of matching {{ model.name|lower|replace("entity", "") }}
     */
    @Query("SELECT e FROM {{ model.name }} e WHERE e.{{ property.name }} LIKE %:{{ property.name }}%")
    List<{{ model.name }}> findBy{{ property.name|capitalize }}Contains(@Param("{{ property.name }}") String {{ property.name }});
{% endif %}
{% endif %}
{% endfor %}

}
