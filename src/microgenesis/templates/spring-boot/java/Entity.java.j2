package {{ base_package }}.model;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

import javax.persistence.*;
import java.time.LocalDateTime;
{% if model.properties|selectattr("type", "equalto", "date")|list|length > 0 %}
import java.time.LocalDate;
{% endif %}
{% if model.properties|selectattr("type", "equalto", "array")|list|length > 0 %}
import java.util.List;
import java.util.ArrayList;
{% endif %}

/**
 * Entity class for {{ model.name }}
 */
@Entity
@Table(name = "{{ model.name|lower|replace("entity", "") }}")
@Data
@Builder
@NoArgsConstructor
@AllArgsConstructor
public class {{ model.name }} {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
{% for property in model.properties %}
{% if property.name == "id" %}
    private Long {{ property.name }};
{% endif %}
{% endfor %}
    
{% for property in model.properties %}
{% if property.name != "id" %}
    {% if property.type == "string" %}
    {% if property.format == "date-time" %}
    private LocalDateTime {{ property.name }};
    {% elif property.format == "date" %}
    private LocalDate {{ property.name }};
    {% else %}
    {% if property.name|lower|contains("email") %}
    @Column(name = "{{ property.name }}"{% if property.required %}, nullable = false{% endif %}, unique = true)
    {% elif property.name|lower|contains("password") %}
    @Column(name = "{{ property.name }}"{% if property.required %}, nullable = false{% endif %})
    {% else %}
    @Column(name = "{{ property.name }}"{% if property.required %}, nullable = false{% endif %})
    {% endif %}
    private String {{ property.name }};
    {% endif %}
    {% elif property.type == "integer" %}
    private Integer {{ property.name }};
    {% elif property.type == "number" %}
    private Double {{ property.name }};
    {% elif property.type == "boolean" %}
    private Boolean {{ property.name }};
    {% elif property.type == "array" %}
    @OneToMany(cascade = CascadeType.ALL, orphanRemoval = true)
    @JoinColumn(name = "{{ model.name|lower }}_id")
    private List<{{ property.items.type|capitalize }}> {{ property.name }} = new ArrayList<>();
    {% elif property.type == "object" and property.ref %}
    @ManyToOne
    @JoinColumn(name = "{{ property.name|lower }}_id"{% if property.required %}, nullable = false{% endif %})
    private {{ property.ref|split("/")|last }} {{ property.name }};
    {% else %}
    // Complex type {{ property.type }} not directly mapped
    private Object {{ property.name }};
    {% endif %}
{% endif %}
{% endfor %}
    
    @Column(name = "created_at")
    private LocalDateTime createdAt;
    
    @Column(name = "updated_at")
    private LocalDateTime updatedAt;
    
    @PrePersist
    protected void onCreate() {
        createdAt = LocalDateTime.now();
        updatedAt = LocalDateTime.now();
    }
    
    @PreUpdate
    protected void onUpdate() {
        updatedAt = LocalDateTime.now();
    }
}
